module GPC_CPU (data, address, clk);
output [15:0]address;
input clk;
inout [7:0]data;


reg ZeroFlag;
reg CarryFlag;

reg[7:0] A_Register;
reg[7:0] B_Register;
reg[7:0] SUM_Register;
reg[7:0] OR_Register;
reg[7:0] NOT_Register;
reg[7:0] AND_Register;
reg[7:0] XOR_Register;
reg[7:0] SL_Register;
reg[7:0] SR_Register;

reg[15:0] X_Register;
reg[15:0] MemoryPointer;
reg[15:0] StackPointer;

always @ (posedge clk)
begin
OR_Register<=A_Register|B_Register;
AND_Register<=A_Register&B_Register;
XOR_Register<=A_Register^B_Register;
NOT_Register<=~A_Register;
ZeroFlag<=A_Register==8'b00000000;
SL_Register<=A_Register<<1;
SR_Register<=A_Register>>1;
end

endmodule